name: Compile External Libraries V2
on:
  workflow_dispatch: # To run it manually
    description: 'manual build check'
  #push: # see: https://help.github.com/en/actions/reference/events-that-trigger-workflows#pull-request-event-pull_request
  pull_request:

jobs:
  compile-sketch:
    name: ${{ matrix.arduino-boards-fqbn }} - test compiling examples

    runs-on: ubuntu-latest # I picked Ubuntu to use shell scripts.

    env:
      # Comma separated list without double quotes around the list.
      REQUIRED_LIBRARIES: Adafruit NeoPixel,FastLED

    strategy:
      matrix:
        # The matrix will produce one job for each configuration parameter of type `arduino-boards-fqbn`
        # In the Arduino IDE, the fqbn is printed in the first line of the verbose output for compilation as parameter -fqbn=... for the "arduino-builder -dump-prefs" command
        #
        # Examples: arduino:avr:uno, arduino:avr:leonardo, arduino:avr:nano, arduino:avr:mega
        # arduino:sam:arduino_due_x, arduino:samd:arduino_zero_native"
        # ATTinyCore:avr:attinyx5:chip=85,clock=1internal, digistump:avr:digispark-tiny, digistump:avr:digispark-pro
        # STMicroelectronics:stm32:GenF1:pnum=BLUEPILL_F103C8
        # esp8266:esp8266:huzzah:eesz=4M3M,xtal=80, esp32:esp32:featheresp32:FlashFreq=80
        # You may add a suffix behind the fqbn with "|" to specify one board for e.g. different compile options like arduino:avr:uno|trace
        #############################################################################################################
        arduino-boards-fqbn:
          - esp32:esp32:esp32
          - esp32:esp32:esp32s2
          - esp32:esp32:esp32c3
          - esp32:esp32:esp32s3

        # Specify parameters for each board.
        #############################################################################################################
        include:
          - arduino-boards-fqbn: esp32:esp32:esp32
            platform-url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
            sketches-exclude: # MatrixPatternsTest,TwoPatternsOnOneStrip because of missing EasyButton library

          - arduino-boards-fqbn: esp32:esp32:esp32s2
            platform-url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
            sketches-exclude: # MatrixPatternsTest,TwoPatternsOnOneStrip because of missing EasyButton library

          - arduino-boards-fqbn: esp32:esp32:esp32c3
             platform-url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
            sketches-exclude: # MatrixPatternsTest,TwoPatternsOnOneStrip because of missing EasyButton library

          - arduino-boards-fqbn: esp32:esp32:esp32s3
            platform-url: https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
            sketches-exclude: # MatrixPatternsTest,TwoPatternsOnOneStrip because of missing EasyButton library

      # Do not cancel all jobs / architectures if one job fails
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Arduino ESP32 core
        run: |
          bash .github/scripts/install-arduino-core-esp32.sh


      - name: Compile all examples using the arduino-test-compile action
        uses: ArminJo/arduino-test-compile@master
        with:
          arduino-board-fqbn: ${{ matrix.arduino-boards-fqbn }}
          arduino-platform: esp32:esp32
          platform-url: ${{ matrix.platform-url }}
          required-libraries: ${{ env.REQUIRED_LIBRARIES }}
          sketches-exclude: ${{ matrix.sketches-exclude }}
          sketch-names: "BlinkRGB.ino,strandtest.ino,Blink.ino"
          build-properties: ${{ toJson(matrix.build-properties) }}